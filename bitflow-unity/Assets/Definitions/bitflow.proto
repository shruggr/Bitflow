syntax = "proto3";

message Field {
    enum Type {
        Text = 0;
        Image = 1;
        File = 2;
        Number = 3;
        Boolean = 4;
    }

    string key = 1;
    string label = 2;
    Type type = 3;
    string value = 4;
}

message UTXO {
    string txid = 1;
    int32 vout = 2;
    string script = 4;
    int32 satoshis = 5;
}

message Stage {
    message Schema {
        string txid = 1;
        string name = 2;
        repeated Field fields = 3;
    }

    message Handler {
        string processScriptTxn = 1; // Script which
        int32 createTaskStageIdx = 2;
        string assignee = 3;
        int32 funds = 4;
    }

    string name = 1;
    Schema schema = 2;
    int32 funds= 3; // Funds required to complete.
    string payee = 4; // Address to which funds are paid.
    string validationScriptTxn = 5; // Script which will validate data
    Handler onComplete = 6;
}


// Top-level Workflow definition.
// txid and owner fields are state vairables only and
// will be ignored if included in Bitcoin transaction
message Workflow {
    string name = 1;
    string txid = 2;
    string owner = 3;
    repeated Stage stages = 4;
}

message State {
    enum Status {
        Open = 0;
        Error = 1;
        Complete = 2;
    }

    message Task {
        Stage stage = 1;
        Status status = 2;
        string address = 3;
        repeated UTXO utxos = 4;
        string assignTxn = 5;
        string txid = 6;
    }

    string txid = 1;
    Workflow workflow = 2;
    Status status = 3;
    repeated Field values = 4;
    repeated Task tasks = 5;
}